{"version":3,"sources":["../../src/lib/datatable.js"],"names":["readTableValuesAsJson","R","rawTable","data","values","i","length","push","zipObj","map","v","JSON","parse","undefined"],"mappings":";;;;;QAEgBA,qB,GAAAA,qB;;AAFhB;;IAAYC,C;;;;AAEL,SAASD,qBAAT,CAA+B,EAAEE,UAAUC,IAAZ,EAA/B,EAAmD;AACxD,QAAMC,SAAS,EAAf;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,KAAKG,MAAzB,EAAiCD,GAAjC,EAAsC;AACpCD,WAAOG,IAAP,CAAYN,EAAEO,MAAF,CAASL,KAAK,CAAL,CAAT,EAAkBA,KAAKE,CAAL,EAAQI,GAAR,CAAYC,KAAKA,IAAIC,KAAKC,KAAL,CAAWF,CAAX,CAAJ,GAAoBG,SAArC,CAAlB,CAAZ;AACD;;AAED,SAAOT,MAAP;AACD","file":"datatable.js","sourcesContent":["import * as R from 'ramda';\n\nexport function readTableValuesAsJson({ rawTable: data }) {\n  const values = [];\n  for (let i = 1; i < data.length; i++) {\n    values.push(R.zipObj(data[0], data[i].map(v => v ? JSON.parse(v) : undefined)));\n  }\n\n  return values;\n}\n"]}