{"version":3,"sources":["../../src/lib/test-case-visitor.js"],"names":["createTestCaseVisitor","gherkinDocument","pickle","testCase","stepLineToKeywordMap","stepLineToPickledStepMap","getSteps","previousKeywordType","PRECONDITION","testStep","steps","sourceLocation","pickleStep","line","keyword","keywordType","language","feature","dataTable","arguments","length","hasOwnProperty","docString"],"mappings":";;;;;QAIgBA,qB,GAAAA,qB;;AAJhB;;AACA;;AACA;;;;;;AAEO,SAASA,qBAAT,CAA+B,EAAEC,eAAF,EAAmBC,MAAnB,EAA2BC,QAA3B,EAA/B,EAAsE;AAC3E,QAAMC,uBAAuB,sDAAwBH,eAAxB,CAA7B;AACA,QAAMI,2BAA2B,gDAA4BH,MAA5B,CAAjC;;AAEA,SAAO;AACLC,YADK;AAELD,UAFK;AAGL,KAACI,QAAD,GAAY;AACV,UAAIC,sBAAsB,uBAAYC,YAAtC;;AAEA,WAAK,MAAMC,QAAX,IAAuBN,SAASO,KAAhC,EAAuC;AACrC,YAAI,CAACD,SAASE,cAAd,EAA8B;;AAE9B,cAAMC,aAAaP,yBAAyBI,SAASE,cAAT,CAAwBE,IAAjD,CAAnB;AACA,cAAMC,UAAU,mCAAe,EAAEF,UAAF,EAAcR,oBAAd,EAAf,CAAhB;AACA,cAAMW,cAAc,sCAAmB;AACrCD,iBADqC;AAErCE,oBAAUf,gBAAgBgB,OAAhB,CAAwBD,QAFG;AAGrCT;AAHqC,SAAnB,CAApB;;AAMA,cAAM;AACJE,kBADI,EACMG,UADN,EACkBE,OADlB,EAC2BC,WAD3B;AAEJ,cAAIG,SAAJ,GAAgB;AACd,mBAAON,WAAWO,SAAX,CAAqBC,MAArB,KAAgC,CAAhC,IACFR,WAAWO,SAAX,CAAqB,CAArB,EAAwBE,cAAxB,CAAuC,MAAvC,CADE,IAEFT,WAAWO,SAAX,CAAqB,CAArB,CAFL;AAGD,WANG;AAOJ,cAAIG,SAAJ,GAAgB;AACd,mBAAOV,WAAWO,SAAX,CAAqBC,MAArB,KAAgC,CAAhC,IACFR,WAAWO,SAAX,CAAqB,CAArB,EAAwBE,cAAxB,CAAuC,SAAvC,CADE,IAEFT,WAAWO,SAAX,CAAqB,CAArB,CAFL;AAGD;AAXG,SAAN;;AAcAZ,8BAAsBQ,WAAtB;AACD;AACF;AAjCI,GAAP;AAmCD","file":"test-case-visitor.js","sourcesContent":["import { getStepLineToKeywordMap } from 'cucumber/lib/formatter/helpers/gherkin_document_parser';\nimport { getStepLineToPickledStepMap, getStepKeyword } from 'cucumber/lib/formatter/helpers/pickle_parser';\nimport KeywordType, { getStepKeywordType } from 'cucumber/lib/keyword_type';\n\nexport function createTestCaseVisitor({ gherkinDocument, pickle, testCase }) {\n  const stepLineToKeywordMap = getStepLineToKeywordMap(gherkinDocument);\n  const stepLineToPickledStepMap = getStepLineToPickledStepMap(pickle);\n\n  return {\n    testCase,\n    pickle,\n    *getSteps() {\n      let previousKeywordType = KeywordType.PRECONDITION;\n\n      for (const testStep of testCase.steps) {\n        if (!testStep.sourceLocation) continue;\n\n        const pickleStep = stepLineToPickledStepMap[testStep.sourceLocation.line];\n        const keyword = getStepKeyword({ pickleStep, stepLineToKeywordMap });\n        const keywordType = getStepKeywordType({\n          keyword,\n          language: gherkinDocument.feature.language,\n          previousKeywordType,\n        });\n\n        yield {\n          testStep, pickleStep, keyword, keywordType,\n          get dataTable() {\n            return pickleStep.arguments.length === 1\n              && pickleStep.arguments[0].hasOwnProperty('rows')\n              && pickleStep.arguments[0];\n          },\n          get docString() {\n            return pickleStep.arguments.length === 1\n              && pickleStep.arguments[0].hasOwnProperty('content')\n              && pickleStep.arguments[0];\n          },\n        };\n\n        previousKeywordType = keywordType;\n      }\n    },\n  };\n}\n\n"]}