{"version":3,"sources":["../../src/lib/format.js"],"names":["fence","StripAnsiTransform","_transform","chunk","encoding","cb","toString","colorFns","marker","normal","inverse","bold","warn","yellow","italic","header","obj","body","colors","depth"],"mappings":";;;;;;QAoBgBA,K,GAAAA,K;;AApBhB;;AACA;;;;AACA;;AACA;;AAEA;;;;;;AAEO,MAAMC,kBAAN,2BAA2C;AAChDC,aAAWC,KAAX,EAAkBC,QAAlB,EAA4BC,EAA5B,EAAgC;AAC9BA,OAAG,IAAH,EAAS,yBAAUF,MAAMG,QAAN,EAAV,CAAT;AACD;AAH+C;;QAArCL,kB,GAAAA,kB;AAMb,MAAMM,WAAW,6BAAY,IAAZ,CAAjB;AACA,MAAMC,SAAS;AACbC,UAAQF,SAASG,OAAT,CAAiBC,IADZ;AAEbC,QAAML,SAASM,MAAT,CAAgBH,OAAhB,CAAwBC,IAFjB;AAGbG,UAAQP,SAASO;AAHJ,CAAf;;AAMO,SAASd,KAAT,CAAee,MAAf,EAAuBC,GAAvB,EAA4B;AACjC,MAAI,CAACA,GAAD,IAAQ,oBAAQA,GAAR,CAAZ,EAA0B;AACxB,WAAQ;EACVR,OAAOI,IAAP,CAAa,MAAKJ,OAAOM,MAAP,CAAe,MAAKC,MAAO,WAA3B,CAAuC,KAAzD,CAA+D;CAD7D;AAGD,GAJD,MAIO;AACL,UAAME,OAAO,OAAOD,GAAP,KAAe,QAAf,GAA0BA,GAA1B,GAAgC,mBAAQA,GAAR,EAAa,EAAEE,QAAQ,IAAV,EAAgBC,OAAO,IAAvB,EAAb,CAA7C;;AAEA,WAAQ;EACVX,OAAOC,MAAP,CAAe,eAAcM,MAAO,QAApC,CAA6C;EAC7CE,IAAK;EACLT,OAAOC,MAAP,CAAe,cAAaM,MAAO,SAAnC,CAA6C;CAH3C;AAKD;AACF","file":"format.js","sourcesContent":["import { Transform } from 'stream';\nimport stripAnsi from 'strip-ansi';\nimport { inspect } from 'util';\nimport { isEmpty } from 'ramda';\n\nimport getColorFns from 'cucumber/lib/formatter/get_color_fns';\n\nexport class StripAnsiTransform extends Transform {\n  _transform(chunk, encoding, cb) {\n    cb(null, stripAnsi(chunk.toString()));\n  }\n}\n\nconst colorFns = getColorFns(true);\nconst marker = {\n  normal: colorFns.inverse.bold,\n  warn: colorFns.yellow.inverse.bold,\n  italic: colorFns.italic,\n};\n\nexport function fence(header, obj) {\n  if (!obj || isEmpty(obj)) {\n    return `\n${marker.warn(`!  ${marker.italic(`No ${header} captured`)}  !`)}\n`;\n  } else {\n    const body = typeof obj === 'string' ? obj : inspect(obj, { colors: true, depth: null });\n\n    return `\n${marker.normal(`═════ begin ${header} ═════`)}\n${body}\n${marker.normal(`══════ end ${header} ══════`)}\n`;\n  }\n}\n"]}