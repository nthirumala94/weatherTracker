'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StripAnsiTransform = undefined;
exports.fence = fence;

var _stream = require('stream');

var _stripAnsi = require('strip-ansi');

var _stripAnsi2 = _interopRequireDefault(_stripAnsi);

var _util = require('util');

var _ramda = require('ramda');

var _get_color_fns = require('cucumber/lib/formatter/get_color_fns');

var _get_color_fns2 = _interopRequireDefault(_get_color_fns);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class StripAnsiTransform extends _stream.Transform {
  _transform(chunk, encoding, cb) {
    cb(null, (0, _stripAnsi2.default)(chunk.toString()));
  }
}

exports.StripAnsiTransform = StripAnsiTransform;
const colorFns = (0, _get_color_fns2.default)(true);
const marker = {
  normal: colorFns.inverse.bold,
  warn: colorFns.yellow.inverse.bold,
  italic: colorFns.italic
};

function fence(header, obj) {
  if (!obj || (0, _ramda.isEmpty)(obj)) {
    return `
${marker.warn(`!  ${marker.italic(`No ${header} captured`)}  !`)}
`;
  } else {
    const body = typeof obj === 'string' ? obj : (0, _util.inspect)(obj, { colors: true, depth: null });

    return `
${marker.normal(`═════ begin ${header} ═════`)}
${body}
${marker.normal(`══════ end ${header} ══════`)}
`;
  }
}
//# sourceMappingURL=format.js.map