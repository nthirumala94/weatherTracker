{"version":3,"sources":["../../src/bin/take-home-integration-test_BASE_17985.js"],"names":["Bluebird","R","config","longStackTraces","usage","option","parse","process","argv","command","console","log","exit","global","program","cli","cwd","options","featurePaths","__dirname","stepPaths","pick","cucumberArgs","args","stdout","getOutStream","colors","on","gracefullyExit","forceExit","run","catch","err","error","enableColors","out","pipe"],"mappings":";;;;AAEA;;;;AACA;;AACA;;AACA;;AACA;;IAAYA,Q;;AACZ;;AACA;;AACA;;IAAYC,C;;;;;;AAEZD,SAASE,MAAT,CAAgB,EAAEC,iBAAiB,IAAnB,EAAhB;;AAEA;;AAEA,oBACGC,KADH,CACS,oCADT,EAEGC,MAFH,CAEU,mBAFV,EAE+B,kBAF/B,EAEmD,IAFnD,EAGGA,MAHH,CAGU,uBAHV,EAGmC,kBAHnC,EAGuD,WAHvD,EAIGA,MAJH,CAIU,qBAJV,EAIiC,wCAJjC,EAI2E,IAJ3E,EAKGA,MALH,CAKU,aALV,EAKyB,iBALzB,EAMGA,MANH,CAMU,gBANV,EAM4B,sBAN5B,EAOGA,MAPH,CAOU,iBAPV,EAO6B,sBAP7B,EAQGC,KARH,CAQSC,QAAQC,IARjB;;AAUA,IAAI,CAAC,oBAAQC,OAAb,EAAsB;AACpBC,UAAQC,GAAR,CAAY,uBAAZ;AACAJ,UAAQK,IAAR,CAAa,CAAb;AACD;;AAEDC,OAAOC,OAAP;;AAEA,MAAMC,MAAM,aAAQ;AAClBC,OAAKT,QAAQS,GAAR,EADa;AAElBC;AACEC,kBAAc,CAAE,mBAAYC,SAAZ,EAAuB,gBAAvB,CAAF,CADhB;AAEEC,eAAW,CAAE,mBAAYD,SAAZ,EAAuB,UAAvB,CAAF;AAFb,KAGKlB,EAAEoB,IAAF,CAAO,CACR,QADQ,EAER,OAFQ,EAGR,MAHQ,EAIR,MAJQ,EAKR,SALQ,CAAP,sBAHL,CAFkB;AAalBC,gBAAc,oBAAQC,IAbJ;AAclBC,UAAQC,aAAa,oBAAQC,MAArB;AAdU,CAAR,CAAZ;;AAiBAnB,QACGoB,EADH,CACM,QADN,EACgB,MAAMZ,IAAIa,cAAJ,EADtB,EAEGD,EAFH,CAEM,QAFN,EAEgB,MAAMZ,IAAIa,cAAJ,EAFtB,EAGGD,EAHH,CAGM,SAHN,EAGiB,MAAMZ,IAAIa,cAAJ,EAHvB,EAIGD,EAJH,CAIM,SAJN,EAIiB,MAAMZ,IAAIc,SAAJ,EAJvB,EAKGF,EALH,CAKM,MALN,EAKc,MAAMZ,IAAIc,SAAJ,EALpB;;AAOAd,IAAIe,GAAJ,GAAUC,KAAV,CAAgBC,OAAO;AACrBtB,UAAQuB,KAAR,CAAc,uBAAYD,GAAZ,CAAd;AACAtB,UAAQC,GAAR,CAAY,iCAAZ;AACAJ,UAAQK,IAAR,CAAa,CAAb;AACD,CAJD;;AAOA,SAASa,YAAT,CAAsBS,YAAtB,EAAoC;AAClC,MAAIA,YAAJ,EAAkB,OAAO3B,QAAQiB,MAAf;;AAElB,QAAMW,MAAM,mCAAZ;AACAA,MAAIC,IAAJ,CAAS7B,QAAQiB,MAAjB;;AAEA,SAAOW,GAAP;AACD","file":"take-home-integration-test_BASE_17985.js","sourcesContent":["\n\nimport program from 'commander';\nimport { install as installSourceMapSupport } from 'source-map-support';\nimport { resolve as resolvePath } from 'path';\nimport { fullStack as formatStack } from 'verror';\nimport * as Bluebird from 'bluebird';\nimport { Cli } from '../lib/cli';\nimport { StripAnsiTransform } from '../lib/strip-ansi';\nimport * as R from 'ramda';\n\nBluebird.config({ longStackTraces: true });\n\ninstallSourceMapSupport();\n\nprogram\n  .usage('[options] [-- <cucumber-args ...>]')\n  .option('-p, --port <port>', 'The port to bind', 8000)\n  .option('-h, --host <hostname>', 'The host to bind', 'localhost')\n  .option('-c, --command <cmd>', 'The command to run to start the server', null)\n  .option('-s, --score', 'Print the score')\n  .option('-D, --no-debug', 'Disable debug output')\n  .option('-C, --no-colors', 'Disable color output')\n  .parse(process.argv);\n\nif (!program.command) {\n  console.log('--command is required');\n  process.exit(1);\n}\n\nglobal.program = program;\n\nconst cli = new Cli({\n  cwd: process.cwd(),\n  options: {\n    featurePaths: [ resolvePath(__dirname, '../../features') ],\n    stepPaths: [ resolvePath(__dirname, '../steps') ],\n    ...R.pick([\n      'colors',\n      'debug',\n      'port',\n      'host',\n      'command',\n    ], program),\n  },\n  cucumberArgs: program.args,\n  stdout: getOutStream(program.colors),\n});\n\nprocess\n  .on('SIGHUP', () => cli.gracefullyExit())\n  .on('SIGINT', () => cli.gracefullyExit())\n  .on('SIGQUIT', () => cli.gracefullyExit())\n  .on('SIGTERM', () => cli.forceExit())\n  .on('exit', () => cli.forceExit());\n\ncli.run().catch(err => {\n  console.error(formatStack(err));\n  console.log('Cucumber exited unsuccessfully.');\n  process.exit(1);\n});\n\n\nfunction getOutStream(enableColors) {\n  if (enableColors) return process.stdout;\n\n  const out = new StripAnsiTransform();\n  out.pipe(process.stdout);\n\n  return out;\n}\n"]}