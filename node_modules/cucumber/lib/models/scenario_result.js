'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _status = require('../status');

var _status2 = _interopRequireDefault(_status);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ScenarioResult = function () {
  function ScenarioResult(scenario, status) {
    (0, _classCallCheck3.default)(this, ScenarioResult);

    this.duration = 0;
    this.failureException = null;
    this.scenario = scenario;
    this.status = status || _status2.default.PASSED;
    this.stepResults = [];
  }

  (0, _createClass3.default)(ScenarioResult, [{
    key: 'shouldUpdateStatus',
    value: function shouldUpdateStatus(stepResultStatus) {
      switch (stepResultStatus) {
        case _status2.default.FAILED:
          return true;
        case _status2.default.AMBIGUOUS:
        case _status2.default.PENDING:
        case _status2.default.SKIPPED:
        case _status2.default.UNDEFINED:
          return this.status === _status2.default.PASSED;
        default:
          return false;
      }
    }
  }, {
    key: 'witnessStepResult',
    value: function witnessStepResult(stepResult) {
      var duration = stepResult.duration,
          failureException = stepResult.failureException,
          status = stepResult.status;

      if (duration) {
        this.duration += duration;
      }
      if (status === _status2.default.FAILED) {
        this.failureException = failureException;
      }
      if (this.shouldUpdateStatus(status)) {
        this.status = status;
      }
      this.stepResults.push(stepResult);
    }
  }]);
  return ScenarioResult;
}();

exports.default = ScenarioResult;


(0, _status.addStatusPredicates)(ScenarioResult.prototype);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RlbHMvc2NlbmFyaW9fcmVzdWx0LmpzIl0sIm5hbWVzIjpbIlNjZW5hcmlvUmVzdWx0Iiwic2NlbmFyaW8iLCJzdGF0dXMiLCJkdXJhdGlvbiIsImZhaWx1cmVFeGNlcHRpb24iLCJQQVNTRUQiLCJzdGVwUmVzdWx0cyIsInN0ZXBSZXN1bHRTdGF0dXMiLCJGQUlMRUQiLCJBTUJJR1VPVVMiLCJQRU5ESU5HIiwiU0tJUFBFRCIsIlVOREVGSU5FRCIsInN0ZXBSZXN1bHQiLCJzaG91bGRVcGRhdGVTdGF0dXMiLCJwdXNoIiwicHJvdG90eXBlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7SUFFcUJBLGM7QUFDbkIsMEJBQVlDLFFBQVosRUFBc0JDLE1BQXRCLEVBQThCO0FBQUE7O0FBQzVCLFNBQUtDLFFBQUwsR0FBZ0IsQ0FBaEI7QUFDQSxTQUFLQyxnQkFBTCxHQUF3QixJQUF4QjtBQUNBLFNBQUtILFFBQUwsR0FBZ0JBLFFBQWhCO0FBQ0EsU0FBS0MsTUFBTCxHQUFjQSxVQUFVLGlCQUFPRyxNQUEvQjtBQUNBLFNBQUtDLFdBQUwsR0FBbUIsRUFBbkI7QUFDRDs7Ozt1Q0FFa0JDLGdCLEVBQWtCO0FBQ25DLGNBQVFBLGdCQUFSO0FBQ0UsYUFBSyxpQkFBT0MsTUFBWjtBQUNFLGlCQUFPLElBQVA7QUFDRixhQUFLLGlCQUFPQyxTQUFaO0FBQ0EsYUFBSyxpQkFBT0MsT0FBWjtBQUNBLGFBQUssaUJBQU9DLE9BQVo7QUFDQSxhQUFLLGlCQUFPQyxTQUFaO0FBQ0UsaUJBQU8sS0FBS1YsTUFBTCxLQUFnQixpQkFBT0csTUFBOUI7QUFDRjtBQUNFLGlCQUFPLEtBQVA7QUFUSjtBQVdEOzs7c0NBRWlCUSxVLEVBQVk7QUFBQSxVQUNwQlYsUUFEb0IsR0FDbUJVLFVBRG5CLENBQ3BCVixRQURvQjtBQUFBLFVBQ1ZDLGdCQURVLEdBQ21CUyxVQURuQixDQUNWVCxnQkFEVTtBQUFBLFVBQ1FGLE1BRFIsR0FDbUJXLFVBRG5CLENBQ1FYLE1BRFI7O0FBRTVCLFVBQUlDLFFBQUosRUFBYztBQUNaLGFBQUtBLFFBQUwsSUFBaUJBLFFBQWpCO0FBQ0Q7QUFDRCxVQUFJRCxXQUFXLGlCQUFPTSxNQUF0QixFQUE4QjtBQUM1QixhQUFLSixnQkFBTCxHQUF3QkEsZ0JBQXhCO0FBQ0Q7QUFDRCxVQUFJLEtBQUtVLGtCQUFMLENBQXdCWixNQUF4QixDQUFKLEVBQXFDO0FBQ25DLGFBQUtBLE1BQUwsR0FBY0EsTUFBZDtBQUNEO0FBQ0QsV0FBS0ksV0FBTCxDQUFpQlMsSUFBakIsQ0FBc0JGLFVBQXRCO0FBQ0Q7Ozs7O2tCQW5Da0JiLGM7OztBQXNDckIsaUNBQW9CQSxlQUFlZ0IsU0FBbkMiLCJmaWxlIjoic2NlbmFyaW9fcmVzdWx0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFN0YXR1cywgeyBhZGRTdGF0dXNQcmVkaWNhdGVzIH0gZnJvbSAnLi4vc3RhdHVzJ1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTY2VuYXJpb1Jlc3VsdCB7XG4gIGNvbnN0cnVjdG9yKHNjZW5hcmlvLCBzdGF0dXMpIHtcbiAgICB0aGlzLmR1cmF0aW9uID0gMFxuICAgIHRoaXMuZmFpbHVyZUV4Y2VwdGlvbiA9IG51bGxcbiAgICB0aGlzLnNjZW5hcmlvID0gc2NlbmFyaW9cbiAgICB0aGlzLnN0YXR1cyA9IHN0YXR1cyB8fCBTdGF0dXMuUEFTU0VEXG4gICAgdGhpcy5zdGVwUmVzdWx0cyA9IFtdXG4gIH1cblxuICBzaG91bGRVcGRhdGVTdGF0dXMoc3RlcFJlc3VsdFN0YXR1cykge1xuICAgIHN3aXRjaCAoc3RlcFJlc3VsdFN0YXR1cykge1xuICAgICAgY2FzZSBTdGF0dXMuRkFJTEVEOlxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgY2FzZSBTdGF0dXMuQU1CSUdVT1VTOlxuICAgICAgY2FzZSBTdGF0dXMuUEVORElORzpcbiAgICAgIGNhc2UgU3RhdHVzLlNLSVBQRUQ6XG4gICAgICBjYXNlIFN0YXR1cy5VTkRFRklORUQ6XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXR1cyA9PT0gU3RhdHVzLlBBU1NFRFxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuICB9XG5cbiAgd2l0bmVzc1N0ZXBSZXN1bHQoc3RlcFJlc3VsdCkge1xuICAgIGNvbnN0IHsgZHVyYXRpb24sIGZhaWx1cmVFeGNlcHRpb24sIHN0YXR1cyB9ID0gc3RlcFJlc3VsdFxuICAgIGlmIChkdXJhdGlvbikge1xuICAgICAgdGhpcy5kdXJhdGlvbiArPSBkdXJhdGlvblxuICAgIH1cbiAgICBpZiAoc3RhdHVzID09PSBTdGF0dXMuRkFJTEVEKSB7XG4gICAgICB0aGlzLmZhaWx1cmVFeGNlcHRpb24gPSBmYWlsdXJlRXhjZXB0aW9uXG4gICAgfVxuICAgIGlmICh0aGlzLnNob3VsZFVwZGF0ZVN0YXR1cyhzdGF0dXMpKSB7XG4gICAgICB0aGlzLnN0YXR1cyA9IHN0YXR1c1xuICAgIH1cbiAgICB0aGlzLnN0ZXBSZXN1bHRzLnB1c2goc3RlcFJlc3VsdClcbiAgfVxufVxuXG5hZGRTdGF0dXNQcmVkaWNhdGVzKFNjZW5hcmlvUmVzdWx0LnByb3RvdHlwZSlcbiJdfQ==