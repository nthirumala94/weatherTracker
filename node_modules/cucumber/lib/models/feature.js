'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _scenario = require('./scenario');

var _scenario2 = _interopRequireDefault(_scenario);

var _tag = require('./tag');

var _tag2 = _interopRequireDefault(_tag);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Feature = function Feature(_ref) {
  var _this = this;

  var gherkinData = _ref.gherkinData,
      gherkinPickles = _ref.gherkinPickles,
      scenarioFilter = _ref.scenarioFilter,
      uri = _ref.uri;
  (0, _classCallCheck3.default)(this, Feature);

  this.description = gherkinData.description;
  this.keyword = gherkinData.keyword;
  this.line = gherkinData.location.line;
  this.name = gherkinData.name;
  this.tags = _lodash2.default.map(gherkinData.tags, _tag2.default.build);
  this.uri = uri;

  var backgroundStepLines = _lodash2.default.chain(gherkinData.children).filter(['type', 'Background']).map('steps').flatten().map(function (step) {
    return step.location.line;
  }).value();

  var scenarioLineToDescriptionMapping = _lodash2.default.chain(gherkinData.children).map(function (element) {
    return [element.location.line, element.description];
  }).fromPairs().value();

  var stepLineToKeywordMapping = _lodash2.default.chain(gherkinData.children).map('steps').flatten().map(function (step) {
    return [step.location.line, step.keyword];
  }).fromPairs().value();

  this.scenarios = _lodash2.default.chain(gherkinPickles).map(function (gherkinPickle) {
    return new _scenario2.default({
      backgroundStepLines: backgroundStepLines,
      feature: _this,
      gherkinData: gherkinPickle,
      language: gherkinData.language,
      lineToDescriptionMapping: scenarioLineToDescriptionMapping,
      stepLineToKeywordMapping: stepLineToKeywordMapping
    });
  }).filter(function (scenario) {
    return scenarioFilter.matches(scenario);
  }).value();
};

exports.default = Feature;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RlbHMvZmVhdHVyZS5qcyJdLCJuYW1lcyI6WyJGZWF0dXJlIiwiZ2hlcmtpbkRhdGEiLCJnaGVya2luUGlja2xlcyIsInNjZW5hcmlvRmlsdGVyIiwidXJpIiwiZGVzY3JpcHRpb24iLCJrZXl3b3JkIiwibGluZSIsImxvY2F0aW9uIiwibmFtZSIsInRhZ3MiLCJtYXAiLCJidWlsZCIsImJhY2tncm91bmRTdGVwTGluZXMiLCJjaGFpbiIsImNoaWxkcmVuIiwiZmlsdGVyIiwiZmxhdHRlbiIsInN0ZXAiLCJ2YWx1ZSIsInNjZW5hcmlvTGluZVRvRGVzY3JpcHRpb25NYXBwaW5nIiwiZWxlbWVudCIsImZyb21QYWlycyIsInN0ZXBMaW5lVG9LZXl3b3JkTWFwcGluZyIsInNjZW5hcmlvcyIsImZlYXR1cmUiLCJnaGVya2luUGlja2xlIiwibGFuZ3VhZ2UiLCJsaW5lVG9EZXNjcmlwdGlvbk1hcHBpbmciLCJtYXRjaGVzIiwic2NlbmFyaW8iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7Ozs7OztJQUVxQkEsTyxHQUNuQix1QkFBa0U7QUFBQTs7QUFBQSxNQUFwREMsV0FBb0QsUUFBcERBLFdBQW9EO0FBQUEsTUFBdkNDLGNBQXVDLFFBQXZDQSxjQUF1QztBQUFBLE1BQXZCQyxjQUF1QixRQUF2QkEsY0FBdUI7QUFBQSxNQUFQQyxHQUFPLFFBQVBBLEdBQU87QUFBQTs7QUFDaEUsT0FBS0MsV0FBTCxHQUFtQkosWUFBWUksV0FBL0I7QUFDQSxPQUFLQyxPQUFMLEdBQWVMLFlBQVlLLE9BQTNCO0FBQ0EsT0FBS0MsSUFBTCxHQUFZTixZQUFZTyxRQUFaLENBQXFCRCxJQUFqQztBQUNBLE9BQUtFLElBQUwsR0FBWVIsWUFBWVEsSUFBeEI7QUFDQSxPQUFLQyxJQUFMLEdBQVksaUJBQUVDLEdBQUYsQ0FBTVYsWUFBWVMsSUFBbEIsRUFBd0IsY0FBSUUsS0FBNUIsQ0FBWjtBQUNBLE9BQUtSLEdBQUwsR0FBV0EsR0FBWDs7QUFFQSxNQUFNUyxzQkFBc0IsaUJBQUVDLEtBQUYsQ0FBUWIsWUFBWWMsUUFBcEIsRUFDekJDLE1BRHlCLENBQ2xCLENBQUMsTUFBRCxFQUFTLFlBQVQsQ0FEa0IsRUFFekJMLEdBRnlCLENBRXJCLE9BRnFCLEVBR3pCTSxPQUh5QixHQUl6Qk4sR0FKeUIsQ0FJckI7QUFBQSxXQUFRTyxLQUFLVixRQUFMLENBQWNELElBQXRCO0FBQUEsR0FKcUIsRUFLekJZLEtBTHlCLEVBQTVCOztBQU9BLE1BQU1DLG1DQUFtQyxpQkFBRU4sS0FBRixDQUFRYixZQUFZYyxRQUFwQixFQUN0Q0osR0FEc0MsQ0FDbEM7QUFBQSxXQUFXLENBQUNVLFFBQVFiLFFBQVIsQ0FBaUJELElBQWxCLEVBQXdCYyxRQUFRaEIsV0FBaEMsQ0FBWDtBQUFBLEdBRGtDLEVBRXRDaUIsU0FGc0MsR0FHdENILEtBSHNDLEVBQXpDOztBQUtBLE1BQU1JLDJCQUEyQixpQkFBRVQsS0FBRixDQUFRYixZQUFZYyxRQUFwQixFQUM5QkosR0FEOEIsQ0FDMUIsT0FEMEIsRUFFOUJNLE9BRjhCLEdBRzlCTixHQUg4QixDQUcxQjtBQUFBLFdBQVEsQ0FBQ08sS0FBS1YsUUFBTCxDQUFjRCxJQUFmLEVBQXFCVyxLQUFLWixPQUExQixDQUFSO0FBQUEsR0FIMEIsRUFJOUJnQixTQUo4QixHQUs5QkgsS0FMOEIsRUFBakM7O0FBT0EsT0FBS0ssU0FBTCxHQUFpQixpQkFBRVYsS0FBRixDQUFRWixjQUFSLEVBQ2RTLEdBRGMsQ0FDVix5QkFBaUI7QUFDcEIsV0FBTyx1QkFBYTtBQUNsQkUsOENBRGtCO0FBRWxCWSxvQkFGa0I7QUFHbEJ4QixtQkFBYXlCLGFBSEs7QUFJbEJDLGdCQUFVMUIsWUFBWTBCLFFBSko7QUFLbEJDLGdDQUEwQlIsZ0NBTFI7QUFNbEJHO0FBTmtCLEtBQWIsQ0FBUDtBQVFELEdBVmMsRUFXZFAsTUFYYyxDQVdQO0FBQUEsV0FBWWIsZUFBZTBCLE9BQWYsQ0FBdUJDLFFBQXZCLENBQVo7QUFBQSxHQVhPLEVBWWRYLEtBWmMsRUFBakI7QUFhRCxDOztrQkF6Q2tCbkIsTyIsImZpbGUiOiJmZWF0dXJlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF8gZnJvbSAnbG9kYXNoJ1xuaW1wb3J0IFNjZW5hcmlvIGZyb20gJy4vc2NlbmFyaW8nXG5pbXBvcnQgVGFnIGZyb20gJy4vdGFnJ1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGZWF0dXJlIHtcbiAgY29uc3RydWN0b3IoeyBnaGVya2luRGF0YSwgZ2hlcmtpblBpY2tsZXMsIHNjZW5hcmlvRmlsdGVyLCB1cmkgfSkge1xuICAgIHRoaXMuZGVzY3JpcHRpb24gPSBnaGVya2luRGF0YS5kZXNjcmlwdGlvblxuICAgIHRoaXMua2V5d29yZCA9IGdoZXJraW5EYXRhLmtleXdvcmRcbiAgICB0aGlzLmxpbmUgPSBnaGVya2luRGF0YS5sb2NhdGlvbi5saW5lXG4gICAgdGhpcy5uYW1lID0gZ2hlcmtpbkRhdGEubmFtZVxuICAgIHRoaXMudGFncyA9IF8ubWFwKGdoZXJraW5EYXRhLnRhZ3MsIFRhZy5idWlsZClcbiAgICB0aGlzLnVyaSA9IHVyaVxuXG4gICAgY29uc3QgYmFja2dyb3VuZFN0ZXBMaW5lcyA9IF8uY2hhaW4oZ2hlcmtpbkRhdGEuY2hpbGRyZW4pXG4gICAgICAuZmlsdGVyKFsndHlwZScsICdCYWNrZ3JvdW5kJ10pXG4gICAgICAubWFwKCdzdGVwcycpXG4gICAgICAuZmxhdHRlbigpXG4gICAgICAubWFwKHN0ZXAgPT4gc3RlcC5sb2NhdGlvbi5saW5lKVxuICAgICAgLnZhbHVlKClcblxuICAgIGNvbnN0IHNjZW5hcmlvTGluZVRvRGVzY3JpcHRpb25NYXBwaW5nID0gXy5jaGFpbihnaGVya2luRGF0YS5jaGlsZHJlbilcbiAgICAgIC5tYXAoZWxlbWVudCA9PiBbZWxlbWVudC5sb2NhdGlvbi5saW5lLCBlbGVtZW50LmRlc2NyaXB0aW9uXSlcbiAgICAgIC5mcm9tUGFpcnMoKVxuICAgICAgLnZhbHVlKClcblxuICAgIGNvbnN0IHN0ZXBMaW5lVG9LZXl3b3JkTWFwcGluZyA9IF8uY2hhaW4oZ2hlcmtpbkRhdGEuY2hpbGRyZW4pXG4gICAgICAubWFwKCdzdGVwcycpXG4gICAgICAuZmxhdHRlbigpXG4gICAgICAubWFwKHN0ZXAgPT4gW3N0ZXAubG9jYXRpb24ubGluZSwgc3RlcC5rZXl3b3JkXSlcbiAgICAgIC5mcm9tUGFpcnMoKVxuICAgICAgLnZhbHVlKClcblxuICAgIHRoaXMuc2NlbmFyaW9zID0gXy5jaGFpbihnaGVya2luUGlja2xlcylcbiAgICAgIC5tYXAoZ2hlcmtpblBpY2tsZSA9PiB7XG4gICAgICAgIHJldHVybiBuZXcgU2NlbmFyaW8oe1xuICAgICAgICAgIGJhY2tncm91bmRTdGVwTGluZXMsXG4gICAgICAgICAgZmVhdHVyZTogdGhpcyxcbiAgICAgICAgICBnaGVya2luRGF0YTogZ2hlcmtpblBpY2tsZSxcbiAgICAgICAgICBsYW5ndWFnZTogZ2hlcmtpbkRhdGEubGFuZ3VhZ2UsXG4gICAgICAgICAgbGluZVRvRGVzY3JpcHRpb25NYXBwaW5nOiBzY2VuYXJpb0xpbmVUb0Rlc2NyaXB0aW9uTWFwcGluZyxcbiAgICAgICAgICBzdGVwTGluZVRvS2V5d29yZE1hcHBpbmdcbiAgICAgICAgfSlcbiAgICAgIH0pXG4gICAgICAuZmlsdGVyKHNjZW5hcmlvID0+IHNjZW5hcmlvRmlsdGVyLm1hdGNoZXMoc2NlbmFyaW8pKVxuICAgICAgLnZhbHVlKClcbiAgfVxufVxuIl19